// netlify/functions/chatboot.js
// Files Chatbot â€” Bilingue FR/EN, SANS API d'IA, rÃ©ponses variÃ©es + redirections strictes.
// Aucune dÃ©pendance, aucun secret requis. RESEND_API_KEY n'est PAS utilisÃ© ici.

const QUESTIONNAIRE_URL = "questionnaire-files.questionnaire.app";
const CONTACT_EMAIL     = "sportifandpro@gmail.com";

// --------- utils ---------
const low  = (s) => (s || "").toLowerCase();
const any  = (t, arr) => arr.some(k => t.includes(k));
const pick = (arr) => arr[Math.floor(Math.random() * arr.length)];
const isEmpty = (v) => !v || !String(v).trim();

// DÃ©tection simple FR/EN : si mots anglais â†’ EN, sinon FR
function detectLang(msg) {
  if (any(msg, ["hello","hi","hey","workout","training","plan","price","food","nutrition","help"]))
    return "en";
  return "fr";
}

// --------- lexiques intents ---------
const K = {
  fr: {
    hello: ["bonjour","salut","coucou","yo"],
    form:  ["questionnaire","formulaire","accÃ¨s","acces","inscription"],
    bug:   ["bug","erreur","problÃ¨me","probleme","marche pas","bloquÃ©","bloquee","bloque","je n'arrive pas","je narrive pas"],
    price: ["prix","tarif","abonnement","payer","paiement","combien","â‚¬","euro","tarifs"],
    train: ["sÃ©ance","seance","exercice","exos","programme","entrain","routine","planning","workout","plan d'entraÃ®nement","plan d entrainement"],
    food:  ["nutrition","recette","repas","manger","alimentation","macro","calorie","calories","protÃ©ine","proteine","glucide","lipide"],
    gear:  ["matÃ©riel","materiel","Ã©quipement","equipement","haltÃ¨re","barre","Ã©lastique","tapis","chaussure","chaussures"],
    recover:["rÃ©cup","recup","sommeil","Ã©tirement","etirement","stretch","courbature","hydratation","repos"],
    motivate:["motivation","dÃ©marrer","demarrer","commencer","reprise","reprendre","rÃ©gularitÃ©","regularite","discipline","pas motivÃ©","pas motive"]
  },
  en: {
    hello: ["hello","hi","hey"],
    form:  ["form","questionnaire","register","sign up","signup","sign-up","access"],
    bug:   ["bug","error","issue","problem","doesn't work","stuck","unable"],
    price: ["price","cost","plan","subscription","pay","euro","â‚¬","pricing"],
    train: ["session","exercise","workout","program","routine","training","plan","schedule"],
    food:  ["food","nutrition","diet","meal","recipe","protein","carb","fat","calorie","calories","macros"],
    gear:  ["equipment","gear","dumbbell","bar","elastic","band","mat","shoes"],
    recover:["recover","recovery","sleep","stretch","rest","hydration","sore","soreness"],
    motivate:["motivation","start","restart","discipline","regularity","consistency","not motivated"]
  }
};

// --------- banques de rÃ©ponses variÃ©es ---------
const R = {
  fr: {
    hello: [
      "Salut ğŸ‘‹ PrÃªt(e) Ã  avancer ?",
      "Hey ğŸ’ª comment puis-je tâ€™aider aujourdâ€™hui ?",
      "Coucou ğŸ‘‹ Besoin dâ€™infos ou dâ€™un coup de main sur le site ?"
    ],
    toFormTrain: [
      `Pour des sÃ©ances/exercices adaptÃ©s, passe par le questionnaire ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `Le mieux pour un programme sur mesure : le questionnaire ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `Je te redirige vers le questionnaire pour un plan personnalisÃ© ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`
    ],
    toFormFood: [
      `Je ne fournis pas de plan/recettes exactes ici ğŸ˜‰ Pour du personnalisÃ© : <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `Pas de nutrition dÃ©taillÃ©e dans le chat. On le fait aprÃ¨s questionnaire ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `Pour une alimentation au cordeau, passe par le questionnaire ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`
    ],
    toFormPrice: [
      `Les tarifs dÃ©pendent de tes objectifs. Oriente-toi via le questionnaire ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `On personnalise aussi le budget. Dâ€™abord le questionnaire, et on te dit tout ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`
    ],
    siteHelp: [
      `Besoin dâ€™aide sur le site ? Dis-moi ce qui bloque et je te guide âœ‹`,
      `Tu peux accÃ©der au questionnaire ici : <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `Pour nous Ã©crire : <a href="mailto:${CONTACT_EMAIL}">${CONTACT_EMAIL}</a>.`
    ],
    bug: [
      `Oups ğŸ˜… dis-moi oÃ¹ Ã§a bloque et je tâ€™accompagne. Essaie aussi dâ€™actualiser (âŒ˜â‡§R).`,
      `Je tâ€™aide ! Tu peux aussi aller directement au formulaire : <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">questionnaire</a>.`
    ],
    gear: [
      "Un set dâ€™haltÃ¨res + Ã©lastiques couvre 90% des besoins ğŸ’ª",
      "Sans matÃ©riel ? Le poids du corps fonctionne trÃ¨s bien."
    ],
    recover: [
      "Sommeil 7â€“9h, hydratation, Ã©tirements doux â†’ base dâ€™une bonne rÃ©cup.",
      "RÃ©cup : dodo rÃ©gulier, eau, marche lÃ©gÃ¨re."
    ],
    motivate: [
      "Petit pas rÃ©gulier > grands discours ğŸ˜‰ Commence 20â€“30 min et tiens la cadence.",
      "Bloque 3 crÃ©neaux/semaine et tiens-les. La rÃ©gularitÃ© fait 80% du job."
    ],
    fallback: [
      `Je peux tâ€™aider Ã  naviguer ou te rediriger vers le questionnaire ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s</a>.`,
      `Tu veux des infos, de lâ€™aide ou tâ€™orienter ? Je suis lÃ  ğŸ™‚`
    ],
    suggestions: {
      hello: ["AccÃ©der au questionnaire","Aide navigation","Contacter lâ€™Ã©quipe"],
      train: ["Objectif perte de poids","Objectif prise de masse"],
      bug:   ["AccÃ©der au questionnaire","Contacter lâ€™Ã©quipe"],
      generic:["AccÃ©der au questionnaire","Aide navigation"]
    }
  },
  en: {
    hello: [
      "Hi ğŸ‘‹ Ready to move forward?",
      "Hey ğŸ’ª how can I help today?",
      "Hello ğŸ‘‹ Need info or guidance on the site?"
    ],
    toFormTrain: [
      `For tailored workouts, please fill the form ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `Custom program? Start here ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `Iâ€™ll redirect you to the form for a truly personalized plan ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`
    ],
    toFormFood: [
      `I donâ€™t provide exact meal plans here ğŸ˜‰ For a custom diet: <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `No detailed nutrition in chat. We do that after the form ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `For precise nutrition, please start with the form ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`
    ],
    toFormPrice: [
      `Prices depend on your goals. Please go through the form ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `We personalize the budget too. Start with the form ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`
    ],
    siteHelp: [
      `Need help on the site? Tell me whatâ€™s blocking and Iâ€™ll guide you âœ‹`,
      `You can access the form here: <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `You can also email us: <a href="mailto:${CONTACT_EMAIL}">${CONTACT_EMAIL}</a>.`
    ],
    bug: [
      `Oops ğŸ˜… tell me whatâ€™s broken and Iâ€™ll guide you. Try refreshing (Ctrl+Shift+R).`,
      `I can help! You can also jump straight to the form: <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">form</a>.`
    ],
    gear: [
      "A couple of dumbbells + resistance bands cover 90% of training.",
      "No equipment? Bodyweight training works great."
    ],
    recover: [
      "Sleep 7â€“9h, hydrate, light stretching â†’ recovery basics.",
      "Recovery: regular sleep, water, easy walks."
    ],
    motivate: [
      "Small consistent steps > big speeches ğŸ˜‰ Start 20â€“30 min and keep steady.",
      "Book 3 weekly slots and stick to them. Consistency wins."
    ],
    fallback: [
      `I can help you navigate or redirect you to the form ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">Access form</a>.`,
      `Need info, help, or guidance? Iâ€™m here ğŸ™‚`
    ],
    suggestions: {
      hello: ["Access form","Site help","Contact team"],
      train: ["Weight loss goal","Muscle gain goal"],
      bug:   ["Access form","Contact team"],
      generic:["Access form","Site help"]
    }
  }
};

// --------- dÃ©tection d'intentions ---------
function detectIntent(lang, msg) {
  const keys = K[lang];
  if (any(msg, keys.hello))    return "hello";
  if (any(msg, keys.form))     return "form";
  if (any(msg, keys.bug))      return "bug";
  if (any(msg, keys.price))    return "price";   // â†’ redirection
  if (any(msg, keys.train))    return "train";   // â†’ redirection
  if (any(msg, keys.food))     return "food";    // â†’ redirection
  if (any(msg, keys.gear))     return "gear";
  if (any(msg, keys.recover))  return "recover";
  if (any(msg, keys.motivate)) return "motivate";
  return "other";
}

// --------- moteur de rÃ©ponse ---------
function respond(lang, msg) {
  const set = R[lang];
  const intent = detectIntent(lang, msg);

  // RÃ¨gles bloquantes
  if (intent === "price") return { reply: pick(set.toFormPrice) };
  if (intent === "train") return { reply: pick(set.toFormTrain), suggestions: set.suggestions.train };
  if (intent === "food")  return { reply: pick(set.toFormFood),  suggestions: set.suggestions.generic };

  // Raccourcis utiles
  if (intent === "hello")   return { reply: pick(set.hello),   suggestions: set.suggestions.hello };
  if (intent === "form")    return { reply: pick(set.siteHelp) };
  if (intent === "bug")     return { reply: pick(set.bug),     suggestions: set.suggestions.bug };
  if (intent === "gear")    return { reply: pick(set.gear) };
  if (intent === "recover") return { reply: pick(set.recover) };
  if (intent === "motivate")return { reply: pick(set.motivate) };

  // Fallback
  return { reply: pick(set.fallback), suggestions: set.suggestions.generic };
}

// --------- handler Netlify ---------
exports.handler = async (event) => {
  try {
    const headers = { "Content-Type": "application/json" };

    // Test direct GET
    if (event.httpMethod === "GET") {
      return { statusCode: 200, headers, body: JSON.stringify({ reply: "Chat prÃªt âœ… / Chat ready âœ…" }) };
    }
    if (event.httpMethod === "OPTIONS") {
      return { statusCode: 200, headers, body: "" };
    }

    const body = event.body ? JSON.parse(event.body) : {};
    const message = String(body.message || "").trim();
    if (isEmpty(message)) {
      return { statusCode: 200, headers, body: JSON.stringify({ reply: "Dis-moi quelque chose ğŸ™‚ / Say something ğŸ™‚" }) };
    }

    const lang = detectLang(message);
    const out  = respond(lang, low(message));

    return { statusCode: 200, headers, body: JSON.stringify(out) };
  } catch (e) {
    console.error("Function crash:", e);
    // on renvoie quand mÃªme une rÃ©ponse (pas de 500 cÃ´tÃ© UI)
    return {
      statusCode: 200,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        reply: `Je peux tâ€™aider Ã  naviguer / I can help you navigate ğŸ‘‰ <a href="${QUESTIONNAIRE_URL}" target="_blank" rel="noopener">AccÃ¨s / Access</a>.`
      })
    };
  }
};
